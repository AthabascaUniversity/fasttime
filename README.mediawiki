== Deploying ==
To deploy to a local tomcat instance, you really only need to do one thing.
You need to setup a server instance in settings.xml called '''localhost'''.
It is assumed that you are running on http://localhost:8080, and that you have
a tomcat manager installed.

== Api Examples ==
=== Services ===
Initial login, returns login information
http://localhost:8080/fasttime/proxy/?fct=getprojects&guid=123544dd-ee58-4924-9d9b-2bdf01379bb8&format=JSON

Gets the projects based on the text to search on.  Remove that, and it will return all projects you have access to.
http://localhost:8080/fasttime/proxy/?fct=getprojects&guid=123544dd-ee58-4924-9d9b-2bdf01379bb8&format=JSON&texttosearch=ASRP%20Technical%20Finance

Gets the tasks available for a specific project
http://localhost:8080/fasttime/proxy/?fct=gettasks&guid=123544dd-ee58-4924-9d9b-2bdf01379bb8&format=JSON&projectid=2

Creating a week is pretty simple, but you can't call this twice per week, as
it will throw an error.
http://localhost:8080/fasttime/proxy/?fct=createweek&dateweekstart=2014-01-27T09:11:05.998Z&format=JSON

The following call will retrieve the week ID, based on the date.
http://localhost:8080/fasttime/proxy/?fct=getweeks&filterdate=2014-01-27T09:11:05.998Z&format=JSON

A call to SaveWorkItem is required to create single line as shown
in the Ace Web Interface.  However, creation of a TimePeriodId is required
first, which is what the createweek call above does.
http://localhost:8080/fasttime/proxy/?fct=saveworkitem&taskid=680&projectid=52&timetypeid=1&timesheetperiodid=1152&HoursDay3=0.5&format=json

=== Testing Calls ===
If you need to test a call, just use chrome developers tools in chrome,
firebug in firefox, or some other such developer system that lets you play
with Javascript within your browser.

I've created a test call function, which appends the current guid
automatically so that you can get right to playing with the APIs.  When the
call is made, the guid is appended, and the results are logged automatically.
Keep in mind that you MUST have the format as JSON or the result will be XML,
and the code does not know how to deal with XML.

An example call is as follows...
 testCall('http://localhost:8080/fasttime/proxy/?fct=getweeks&format=json');